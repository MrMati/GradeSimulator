version: 2.1
jobs: # a collection of steps
  build:
    parallelism: 1
    environment:
      _JAVA_OPTIONS: "-Xmx3g"

    working_directory: ~/circleci-demo # directory where steps will run

    docker: # run the steps with Docker
      - image: mrmati/mrmati:latest

    steps: # a collection of executable commands

      - checkout # check out source code to working directory

      - run:
          name: Npm install
          command: npm --prefix ./fake-log install ./fake-log

      -   run:
              name: Add fake-log to /etc/hosts
              command: echo "127.0.0.55 api.fakelog.cf" | sudo tee -a /etc/hosts

      - run:
          name: Enable execution for gradlew
          command: chmod +x gradlew

        # restore saved caches
      - restore_cache:
            keys:
                - gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

      - restore_cache:
            keys:
                # for multi-project builds where dependencies are not defined in one central file,
                # an additional run step before is necessary that concatenates affected files
                # into one file that can be checksummed
                - gradle-cache-{{ checksum "build.gradle" }}
                - gradle-cache

      - restore_cache:
            keys:
                - gradle-build-caches-{{ .Revision }}
                - gradle-build-caches

      - run:
            name: Restoring Gradle Build Caches
            command: |
                [ -d ~/gradle-build-caches ] &&
                  [ -n "$(ls -A ~/gradle-build-caches)" ] &&
                  rm -rf ~/.gradle/caches/build-cache-* &&
                  mv ~/gradle-build-caches/* ~/.gradle/caches/ || true

        # download and cache dependencies and Gradle
      - run:
            name: Downloading Dependencies
            command: ./gradlew --max-workers 2 downloadDependencies


      - run:
          name: Run Gradle test
          command: ./gradlew test


      -   save_cache:
              paths:
                  - ~/.gradle/wrapper/
              key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

      -   save_cache:
              paths:
                  - ~/.gradle/caches/
              key: gradle-cache-{{ checksum "build.gradle" }}

      -   run:
              name: Collecting Gradle Build Caches
              command: |
                  mkdir -p ~/gradle-build-caches
                  [ -d ~/.gradle/caches ] &&
                    [ -n "$(ls -Ad ~/.gradle/caches/build-cache-* 2>/dev/null)" ] &&
                    mv ~/.gradle/caches/build-cache-* ~/gradle-build-caches || true
              when: always

      -   save_cache:
              paths:
                  - ~/gradle-build-caches
              key: gradle-build-caches-{{ .Revision }}
              when: always

      - store_test_results:
          path: build/test-results/test/

      - store_artifacts: # store the uberjar as an artifact
          path: build/libs/
          
orbs:
  heroku: circleci/heroku@1.0.1
workflows:
  version: 2.1
  workflow:
    jobs:
      - build
  heroku_deploy:
    jobs:
      - heroku/deploy-via-git

